{"version":3,"sources":["assets/tpd-banner.png","assets/adventure-home.png","components/Banner/Banner.js","components/Projects/Projects.js","components/About/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Banner","className","src","require","alt","ButtonGroup","variant","color","aria-label","to","Button","projectMap","id","name","img","description","deployed","repo","Projects","map","item","key","size","href","target","rel","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","teamInfo","portfolio","github","About","classes","Grid","container","xs","team","Paper","createMuiTheme","primary","light","main","dark","contrastText","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7cb99dc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tpd-banner.84d6bdac.png\";","module.exports = __webpack_public_path__ + \"static/media/adventure-home.9c7f1dc0.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Banner.css\";\r\nimport { Button, ButtonGroup } from '@material-ui/core'\r\n\r\nfunction Banner() {\r\n    return (\r\n        <div className=\"mainBanner\">\r\n            <div className=\"banner\">\r\n                <img src={require(\"../../assets/tpd-banner.png\")} alt=\"Third Project Development\" className=\"bannerImg\"></img>\r\n            </div>\r\n\r\n                <ButtonGroup variant=\"text\" color=\"secondary\" aria-label=\"text secondary button group\">\r\n                    <Link to=\"/projects\">\r\n                        <Button>Projects</Button>\r\n                    </Link>\r\n\r\n                    <Link to=\"/about\">\r\n                        <Button>About Us</Button>\r\n                    </Link>\r\n                </ButtonGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React from \"react\";\r\nimport \"./Projects.css\";\r\nimport {Button, ButtonGroup} from \"@material-ui/core\"\r\n\r\nconst projectMap = [\r\n    {\r\n        id: 1,\r\n        name: \"Once Upon an Adventure\",\r\n        img: require(\"../../assets/adventure-home.png\"),\r\n        description: \"Once Upon an Adventure is an interactive learning experience. Based on both RPG's and Choose Your Own Adventure games, Once Upon an Adventure offers a variety of learning games that any child will enjoy.\",\r\n        deployed: \"https://onceuponanadventure.herokuapp.com/\",\r\n        repo: \"https://github.com/annaxgrace/once-upon-an-adventure\"\r\n    }\r\n]\r\n\r\nfunction Projects() {\r\n    return(\r\n        <div className=\"projectsDiv\">\r\n            <h1>PROJECTS</h1>\r\n\r\n            {projectMap.map(item => (\r\n                <div className=\"mappedItems\" key={item.id}>\r\n                    <h3>{item.name}</h3>\r\n                    <p>\r\n                        <img src={item.img} alt={item.name} className=\"projectImg\" />\r\n                        <br />\r\n                        {item.description}\r\n                    </p>\r\n\r\n                    <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n                        <a href={item.deployed} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Button>Deployed</Button>\r\n                        </a>\r\n\r\n                        <a href={item.repo} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Button>Repository</Button>\r\n                        </a>\r\n                    </ButtonGroup>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Grid, Button, ButtonGroup } from '@material-ui/core';\r\nimport \"./About.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n  const teamInfo = [\r\n      {\r\n          id: 1,\r\n          img: \"https://avatars2.githubusercontent.com/u/61895571?s=460&u=51c1a5027c2ee815104a12b2aded2bcf51b2c6b7&v=4\",\r\n          name: \"Anna Conover\",\r\n          portfolio: \"https://annaxgrace.github.io/Portfolio/#/\",\r\n          github: \"https://github.com/AnnaxGrace\"\r\n      },\r\n      {\r\n          id: 2,\r\n          img: \"https://avatars1.githubusercontent.com/u/63175319?s=460&u=129b44a249961facc8dfa20c40e79189b97f2b1d&v=4\",\r\n          name: \"Erik Hirsch\",\r\n          portfolio: \"https://eh4git.github.io/React_Profile/\",\r\n          github: \"https://github.com/eh4git\"\r\n      },\r\n      {\r\n          id: 3,\r\n          img: \"https://avatars1.githubusercontent.com/u/63208156?s=460&u=8d8b6187ec717c20f6be22ed2eb5cae6f90a7341&v=4\",\r\n          name: \"Jace Clements\",\r\n          portfolio: \"https://tiiedye.github.io/React-Portfolio/\",\r\n          github: \"https://github.com/tiiedye\"\r\n      },\r\n      {\r\n          id: 4,\r\n          img: \"https://avatars0.githubusercontent.com/u/63328108?s=460&u=c51d24d76e55fea2edb633efed6d2306ff96167f&v=4\",\r\n          name: \"Tony Garces\",\r\n          portfolio: \"#\",\r\n          github: \"https://github.com/T-nyG\"\r\n      },\r\n      {\r\n          id: 5,\r\n          img: \"https://avatars0.githubusercontent.com/u/60115473?s=460&u=4252882a1a888bde88434210e91cec7732b3e9ba&v=4\",\r\n          name: \"Vinnie Lopez\",\r\n          portfolio: \"https://vinnielo.github.io/React-Portfolio/\",\r\n          github: \"https://github.com/vinnielo\"\r\n      }\r\n  ]\r\n\r\nfunction About() {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className=\"teamContainer\">\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid xs={1}>\r\n                        {/* intentionally left empty for spacing purposes */}\r\n                    </Grid>\r\n                    {teamInfo.map(team => (\r\n                        <Grid item xs={2} key={team.id}>\r\n                            <Paper className={classes.paper}>\r\n                                <img src={team.img} className=\"icon\" alt=\"team icon\"></img>\r\n                                <br />\r\n                                <h4>{team.name}</h4>\r\n\r\n                                <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n                                    <a href={team.portfolio} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <Button>Portfolio</Button>\r\n                                    </a>\r\n\r\n                                    <a href={team.github} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <Button>GitHub</Button>\r\n                                    </a>\r\n                                </ButtonGroup>\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Banner from \"./components/Banner/Banner\"\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Projects from \"./components/Projects/Projects\";\nimport About from \"./components/About/About\";\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#00ff8b',\n      main: '#00ff8b',\n      dark: '#00ff8b',\n      contrastText: '#00ff8b',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <Router>\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <Banner />\n\n          <Route exact path=\"/projects\" component={Projects} />\n          <Route exact path=\"/about\" component={About} />\n        </div>\n      </MuiThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}